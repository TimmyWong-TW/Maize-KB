version: '3.4'
name: maize-kb-tools
services:
  embedder:
    image: ${DOCKER_REGISTRY-}embedder
    build:
      context: .
      dockerfile: Embedder/Dockerfile
    volumes:
      - huggingface:/root/.cache/huggingface
  # one-off tools below
  embedder-cache:
    scale: 0
    build:
      context: .
      dockerfile: Embedder/Dockerfile
    entrypoint: python3 main.py
    volumes:
      - huggingface:/root/.cache/huggingface
  vimeo-downloader:
    scale: 0
    image: ${DOCKER_REGISTRY-}vimeo-downloader
    build:
      context: .
      dockerfile: VimeoDownloader/Dockerfile
    volumes:
      - ../:/data
    working_dir: /data/source/vimeo/淡江教會
    environment:
      USER_ID: '2178983'
      PROFILE_SECTION_PAGE: '1'
      VIDEOS_PAGE: '1'
    deploy:
      resources:
        limits:
          cpus: '8.0' # limit parallel downloads, adjust by available memory and bandwidth
  transcriber:
    scale: 0
    build:
      context: .
      dockerfile: Transcriber/Dockerfile
    volumes:
      - huggingface:/root/.cache/huggingface
      - ../:/data
    entrypoint: /bin/bash -O globstar -c
    command: whisperx --model large-v3 --output_format json --task transcribe --language zh --align_model StevenLimcorn/wav2vec2-xls-r-300m-zh-TW --initial_prompt "弟兄姊妹平安，我們一起來思想。繁體中文，臺灣國語。" --output_dir /data/whisperx /data/source/**/*.m4a
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  whisperx-json-trimmer:
    scale: 0
    build:
      context: .
      dockerfile: WhisperXJsonTrimmer/Dockerfile
    volumes:
      - ../:/data
  resegmenter:
    scale: 0
    image: ${DOCKER_REGISTRY-}resegmenter
    build:
      context: .
      dockerfile: Resegmenter/Dockerfile
    volumes:
      - ../:/data
  chinese-converter:
    scale: 0
    build:
      context: .
      dockerfile: ChineseConverter/Dockerfile
    volumes:
      - ../:/data
  descriptor:
    scale: 0
    build:
      context: .
      dockerfile: Descriptor/Dockerfile
    env_file:
      - secrets.env
    volumes:
      - ../:/data
  semantic-chunker:
    scale: 0
    image: ${DOCKER_REGISTRY-}semantic-chunker
    build:
      context: .
      dockerfile: SemanticChunker/Dockerfile
    volumes:
      - ../:/data
    environment:
      EMBEDDER_HOST: http://embedder/

volumes:
  huggingface:
    external: true


